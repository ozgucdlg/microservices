version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_DATABASE: product-service
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - product_network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Product Service Application
  product-service:
    build:
      context: ../..
      dockerfile: product-service/docker/Dockerfile
    container_name: product-service
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATA_MONGODB_HOST=mongodb
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_DATABASE=product-service
      - SPRING_DATA_MONGODB_USERNAME=root
      - SPRING_DATA_MONGODB_PASSWORD=example
      - JAVA_OPTS=-Xms256m -Xmx512m
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - product_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mongodb_data:
    name: mongodb_data
    driver: local
  mongodb_config:
    name: mongodb_config
    driver: local

networks:
  product_network:
    name: product_network
    driver: bridge 